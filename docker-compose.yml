---
services:
  reverse-proxy:
    # The official v2.0 Traefik docker image
    image: traefik:v2.0
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
       - /var/run/docker.sock:/var/run/docker.sock
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:v1.120.0
    ports:
      - 8428:8428
      - 8089:8089
      - 8089:8089/udp
      - 2003:2003
      - 2003:2003/udp
      - 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - "--storageDataPath=/storage"
      - "--graphiteListenAddr=:2003"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
      - "--influxListenAddr=:8089"
      - "--retentionPeriod=1y"
    networks:
      - vm_net
    restart: always

  # Grafana instance configured with VictoriaMetrics as datasource
  grafana:
    container_name: grafana
    image: grafana/grafana:12.0.2
    labels:
      - "traefik.http.routers.whoami.rule=Host(`dash.example.com`)"
    depends_on:
      - "victoriametrics"
    userns_mode: "keep-id;uid=472,gid=472"
    ports:
      - 3000:3000
    volumes:
      - grafanadata:/var/lib/grafana
      - ./provisioning/datasources/prometheus-datasource:/etc/grafana/provisioning/datasources
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards:/var/lib/grafana/dashboards
    networks:
      - vm_net
    restart: always
volumes:
  vmdata: {}
  grafanadata: {}
networks:
  vm_net:
